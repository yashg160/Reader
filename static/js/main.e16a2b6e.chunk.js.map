{"version":3,"sources":["components/Footer.js","screens/Home.js","screens/Dashboard.js","screens/Profile.js","screens/WriteArticle.js","screens/Article.js","screens/EditProfile.js","App.js","screens/User.js","serviceWorker.js","index.js","config.js"],"names":["Footer","style","marginTop","Divider","variant","Typography","align","marginBottom","React","PureComponent","Home","state","loading","dialogLoading","error","getStartedDialog","signInDialog","emailError","emailErrorMessage","passwordError","passwordErrorMessage","getStartedEmail","getStartedPassword","signInEmail","signInPassword","errorSnackbar","successSnackbar","email","test","Error","password","fetch","serverUrl","method","headers","body","JSON","stringify","this","rawResponse","json","content","console","log","errorMessage","user","Cookies","set","id","expires","authenticated","setState","validateEmail","then","validatePassword","insertUserIntoTable","props","history","push","catch","message","findUser","theme","createMuiTheme","palette","primary","main","secondary","light","contrastText","typography","fontFamily","display","alignItems","justifyContent","CircularProgress","color","size","ThemeProvider","AppBar","position","backgroundColor","Toolbar","paddingLeft","paddingRight","flex","onClick","Button","textTransform","fontSize","marginRight","marginLeft","paddingTop","paddingBottom","width","height","padding","href","flexWrap","map","tag","Chip","icon","label","margin","borderRadius","boxShadow","to","Grid","container","direction","item","justify","xs","md","Dialog","open","onClose","onExited","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","type","fullWidth","helperText","disabled","onChange","event","target","value","DialogActions","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","action","IconButton","key","aria-label","Component","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e16a2b6e.chunk.js","sourcesContent":["import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\n\nexport default class Footer extends React.PureComponent {\n\n    render() {\n        return (\n            <div style={{marginTop: 100}}>\n                \n                <Divider variant=\"middle\"/>\n                \n                <Typography align=\"center\" variant=\"body1\" style={{marginTop: 40, marginBottom: 40}}>\n                    Reader blog app. Created by Yash Gupta November 2019.\n                </Typography>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\n\n\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport Footer from '../components/Footer';\n\nimport serverUrl from '../config';\n\n\nimport Cookies from 'js-cookie';\n\n\n\nexport default class Home extends React.Component{\n\n    constructor() {\n        super();\n\n        this.state = {\n            loading: true,\n            dialogLoading: false,\n            error: false,\n            getStartedDialog: false,\n            signInDialog: false,\n            emailError: false,\n            emailErrorMessage: '',\n            passwordError: false,\n            passwordErrorMessage: '',\n            getStartedEmail: '',\n            getStartedPassword: '',\n            signInEmail: '',\n            signInPassword: '',\n            errorSnackbar: false,\n            successSnackbar: false\n        }\n    }\n\n    async validateEmail(email) {\n        var reg = /\\S+@\\S+\\.\\S+/;\n        if (!reg.test(email)) \n            throw Error('ERR_EMAIL');\n    }\n\n    async validatePassword(password) {\n        var reg = /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/;\n        if (!reg.test(password)) \n            throw Error('ERR_PASSWORD');\n    }\n\n    async insertUserIntoTable() {\n\n        let rawResponse = await fetch(serverUrl + `/users/signup`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                email: this.state.getStartedEmail,\n                password: this.state.getStartedPassword\n            }),\n            \n        });\n\n        var content = await rawResponse.json();\n        console.log(content);\n        if (content.error && content.errorMessage=='ERR_DUP_ENTRY') \n            throw Error('ERR_DUP_ENTRY');\n        else if (content.error) \n            throw Error('ERR_UNKNOWN');\n        \n        const user = content.user;\n        Cookies.set('userId', user.id, { expires: 7 });\n        Cookies.set('userAuthenticated', user.authenticated, { expires: 7 });\n        Cookies.set('profileComplete', false, { expires: 7 });\n    }\n\n    handleGetStartedClick() {\n        console.log('Called handleGetStartedClick', this.state);\n        this.setState({ dialogLoading: true, error: false, emailError: false, passwordError: false, emailErrorMessage:'' });\n\n        this.validateEmail(this.state.getStartedEmail)\n            .then(() => this.validatePassword(this.state.getStartedPassword))\n            .then(() => this.insertUserIntoTable())\n            .then(() => {\n                //User created successfully. Procced the next screen.\n                console.log('User created successfully. Will proceed to next screen');\n                this.setState({ dialogLoading: false, getStartedDialog: false, successSnackbar: true });\n                this.props.history.push('/profile');\n            })\n            .catch(error => {\n\n                console.error(error);\n                this.setState({ errorSnackbar: true });\n                if (error.message == 'ERR_EMAIL')\n                    this.setState({ dialogLoading: false, emailError: true, emailErrorMessage: 'Invalid Email' });\n                else if (error.message == 'ERR_PASSWORD')\n                    this.setState({ dialogLoading: false, passwordError: true });\n                else if (error.message == 'ERR_DUP_ENTRY')\n                    this.setState({ dialogLoading: false, emailError: true, emailErrorMessage: 'Email already registered' });\n                else {\n                    //TODO: Display some error notification or something.\n                    this.setState({ dialogLoading: false });\n                }\n                    \n            });\n    }\n\n    async findUser() {\n        \n        var rawResponse = await fetch(serverUrl + `/users/signin?email=${this.state.signInEmail}&password=${this.state.signInPassword}`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        });\n        var content = await rawResponse.json();\n        console.log(content);\n\n        if (content.error) \n            throw Error(content.errorMessage);\n        \n        //No error. So set the cookies, that are available on the entire site\n        const user = content.user;\n        Cookies.set('userId', user.id, { expires: 7 });\n        Cookies.set('userAuthenticated', user.authenticated, { expires: 7 });\n        Cookies.set('profileComplete', false);\n    }\n\n    handleSignInClick() {\n        console.log('Called handleSignInClick');\n\n        this.setState({ dialogLoading: true, error: false, emailError: false, passwordError: false, emailErrorMessage: '', passwordErrorMessage: '' });\n\n        const { signInEmail } = this.state;\n\n        this.validateEmail(signInEmail)\n            .then(() => this.findUser())\n            .then(() => {\n                //User exists. Password verified in previous method. Proceed to next page\n                console.log('Email and password were correct. Will proceed to next screen');\n                \n                this.setState({ dialogLoading: false, signInDialog: false, successSnackbar: true });\n                this.props.history.push('/dashboard')\n\n            })\n            .catch(error => {\n                console.error(error);\n                this.setState({ errorSnackbar: true });\n                //TODO: Error message for ERR_SERVER and else case\n                if (error.message == 'ERR_EMAIL')\n                    this.setState({ dialogLoading: false, emailError: true, emailErrorMessage: 'Invalid Email' });\n                else if (error.message == 'ERR_SERVER' || error.message == 'ERR_DUP_ACC')\n                    this.setState({ dialogLoading: false });\n                else if (error.message == 'ERR_USER_EXISTS')\n                    this.setState({ dialogLoading: false, emailError: true, emailErrorMessage: 'No such account exists' });\n                else if (error.message == 'ERR_PASSWORD')\n                    this.setState({ dialogLoading: false, passwordError: true, passwordErrorMessage: 'Incorrect password. Try again' });\n                else\n                    this.setState({ dialogLoading: false})\n            });\n        \n    }\n\n    componentDidMount() {\n\n        //Get the userAuthentcated cookie. If it is true, then move to the dashboard screen. Else, display this page\n        //to allow the user to signup.\n\n        /* const userAuthenticated = Cookies.get('userAuthenticated');\n        const profileComplete = Cookies.get('profileComplete');\n        console.log('Cookie userAuthenticated: ', userAuthenticated);\n\n        if (userAuthenticated && profileComplete)\n            this.props.history.push('/dashboard');\n        else if (!profileComplete)\n            this.props.history.push('/profile'); */\n            \n        this.setState({ loading: false });\n    }\n    \n    render() {\n\n        const tags = [\n            'Entertainment',\n            'Faishon',\n            'Finance',\n            'Fitness',\n            'Relationship',\n            'Technology'\n        ]\n        \n        const theme = createMuiTheme({\n            palette: {\n                primary: {\n                    main: '#673ab7',\n                },\n                secondary: {\n                    light: '#828282',\n                    main: '#000',\n                    contrastText: '#fff',\n                },\n            },\n            typography: {\n                fontFamily: 'Nunito'\n            }\n        });\n        if (this.state.loading) {\n            return (\n                <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: 200}}>\n                    <CircularProgress variant=\"indeterminate\" color=\"secondary\" size={40}/>\n                </div>\n                \n            )\n        }\n\n        return (\n            <ThemeProvider theme={theme}>\n                <div>\n                    <AppBar position=\"sticky\" style={{ backgroundColor: 'white', }}>\n                        <Toolbar style={{paddingLeft: 80, paddingRight: 80}}>\n\n                            <Typography variant=\"h6\" style={{ flex: 1, color: 'black' }} onClick={() => this.props.history.push('/dashboard')}>\n                                Reader\n                            </Typography>\n\n                            <Button color=\"default\" style={{ textTransform: 'capitalize', fontSize: 18 }}>Write</Button>\n                            <Button color=\"default\" style={{ marginRight: 10, textTransform: 'capitalize', fontSize: 18 }} onClick={() => this.setState({ signInDialog: true })}>Sign In</Button>\n                            <Button variant='contained' color='primary' style={{ marginLeft: 10, paddingTop: 10, paddingBottom: 10, paddingRight: 20, paddingLeft: 20, textTransform: 'capitalize', fontSize: 18 }} onClick={() => this.setState({ getStartedDialog: true })}>Get Started</Button>\n                        </Toolbar>\n                    </AppBar>\n\n                    <div style={{width: \"100%\", height: \"auto\",padding: \"1rem 0 1rem 0\", position: \"sticky\", backgroundColor: \"rgba(255, 200, 200, 1)\", display: \"flex\", alignItems: \"center\", justifyContent: 'center', color: \"rgb(200, 0,0)\"}}>\n                        <Typography variant=\"subtitle1\" align=\"center\">\n                            Unfortunately, the API for this project has been deployed, but due to unavailability of the correct version of MySQL database with Heroku's ClearDB, some breaking changes were introduced in the project structure.\n                            Visit the <a href=\"https://github.com/yashg160/Reader\">Github repository</a> for more details and screenshots.\n                        </Typography>\n                    </div>\n\n                    <div style={{ marginLeft: 120, marginRight: 120 }}>\n\n                        <Typography align=\"center\" variant=\"h1\" style={{ marginTop: 80 }}>\n                            Read about what matters to you\n                        </Typography>\n\n                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexWrap: 'wrap', marginTop: 40, marginBottom: 40 }}>\n                            {\n                                tags.map((tag) => (\n                                    <Chip\n                                        color='secondary'\n                                        icon={<CheckCircleOutlineIcon color='primary' fontSize='large'/>}\n                                        label={<Typography variant='h6'>{tag}</Typography>}\n                                        style={{ margin: 16, padding: 32, borderRadius: 32, boxShadow: '4px 4px 4px 4px rgba(0,0,0,0.4)' }}\n                                    />\n                                ))\n                            }\n                        </div>\n\n                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginLeft: 'auto', marginRight: 'auto', marginTop: 40, marginBottom: 40 }}>\n                            <Typography variant=\"h5\" align=\"center\">\n                                We offer a wide range of topics. Read anything you want.\n                            </Typography>\n\n                        </div>\n\n                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginLeft: 'auto', marginRight: 'auto', marginTop: 40 }}>\n                            <Button variant=\"contained\" color='primary' style={{ paddingTop: 20, paddingBottom: 20, paddingLeft: 100, paddingRight: 100, textTransform: 'capitalize', fontSize: 24, borderRadius: 30, boxShadow: '4px 4px 4px 4px rgba(0,0,0,0.2)' }}>\n                                Get Started\n                            </Button>\n                        </div>\n\n                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginLeft: 'auto', marginRight: 'auto', marginTop: 20, marginBottom: 80 }}>\n                            <Typography variant=\"body1\" align=\"center\" style={{fontSize: 20}}>\n                                Already have an account? <Link to=\"#\">Sign In</Link>\n                            </Typography>\n                        </div>\n\n                        <Divider variant=\"middle\" style={{ marginTop: 100, marginBottom: 100, height: '4px', marginLeft: 'auto', marginRight: 'auto' }}/>\n\n                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexWrap: 'wrap', marginTop: 100, marginBottom: 40 }}>\n                            <Chip\n                                color='primary'\n                                variant='outlined'\n                                icon={<CheckCircleOutlineIcon fontSize = 'large' />}\n                                label={<Typography variant='h6'>Many Topics</Typography>}\n                                style={{ margin: 16, padding: 32, borderRadius: 32, boxShadow: '2px rgba(0,0,0,0.6)' }}\n                            />\n                            <Chip\n                                color='primary'\n                                variant='outlined'\n                                icon={<CheckCircleOutlineIcon fontSize='large' />}\n                                label={<Typography variant='h6'>Free Reading</Typography>}\n                                style={{ margin: 16, padding: 32, borderRadius: 32 }}\n                            />\n                            <Chip\n                                color='primary'\n                                variant='outlined'\n                                icon={<CheckCircleOutlineIcon fontSize='large' />}\n                                label={<Typography variant='h6'>Free Writing</Typography>}\n                                style={{ margin: 16, padding: 32, borderRadius: 32 }}\n                            />\n                            <Chip\n                                icon={<CheckCircleOutlineIcon fontSize='large' />}\n                                label={<Typography variant='h5'>On Reader, all for you.</Typography>}\n                                style={{ margin: 20, padding: 36, borderRadius: 36, backgroundColor:'transparent' }}\n                            />\n                        </div>\n\n                        <div style={{ marginTop: 120, marginBottom: 40 }}>\n                            <Typography variant=\"h2\">\n                                No ads. Ever.\n                        </Typography>\n                            <Typography variant=\"h6\">\n                                We don't sell your data or target you with ads.\n                        </Typography>\n                        </div>\n\n                        <Grid container direction=\"row\" style={{ marginTop: 100, marginBottom: 100 }}>\n\n                            <Grid container item alignItems=\"center\" justify='center' xs={12} md={6}>\n\n                                <Button variant=\"contained\" color='primary' style={{ paddingTop: 20, paddingBottom: 20, paddingLeft: 100, paddingRight: 100, fontSize: 24, textTransform: 'capitalize', borderRadius: 30, boxShadow: '4px 4px 4px 4px rgba(0,0,0,0.2)'  }}>\n                                    Get Started\n                                </Button>\n\n                            </Grid>\n\n                            <Grid container item alignItems='center' justify='center' xs={12} md={6}>\n                                <Typography variant=\"h4\" align='center'>\n                                    We are different than others\n                                </Typography>\n\n                                <Typography variant=\"body1\" align='center' style={{ marginTop: 40, fontSize: 20 }}>\n                                    Reader is not like any other platform on the internet. Our sole purpose is to help you find compelling ideas, knowledge, and perspectives. We don’t serve ads—we serve you, the curious reader who loves to learn new things. Reader is home to thousands of independent voices, and we combine humans and technology to find the best reading for you—and filter out the rest.\n                                </Typography>\n                            </Grid>\n                        </Grid>\n\n                        <Divider variant=\"middle\" style={{ marginTop: 100, marginBottom: 100, height: '4px', marginLeft: 'auto', marginRight: 'auto' }} />\n\n                        <div style={{ marginTop: 80, marginBottom: 80 }}>\n                            <Typography align=\"center\" variant=\"h1\" style={{ marginTop: 20 }}>\n                                Expand your reading.\n                    </Typography>\n\n                            <Typography align=\"center\" variant=\"h1\" style={{ marginTop: 20, marginBottom: 20 }}>\n                                Expand your mind.\n                    </Typography>\n                        </div>\n\n                    </div>\n\n                    <Footer />\n\n                    <Dialog open={this.state.getStartedDialog}\n                        onClose={() => this.setState({ getStartedDialog: false })}\n                        onExited={() => this.setState({ emailError: false, emailErrorMessage: '', passwordError: false, passwordErrorMessage: '' })}\n                        aria-labelledby=\"form-dialog-title\" >\n                        <Grid container direction=\"column\" align=\"center\" justify=\"center\">\n\n                            <Grid item xs={12}>\n\n                                <DialogTitle id=\"form-dialog-title\">Get Started</DialogTitle>\n\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <DialogContent>\n\n                                    <DialogContentText style={{ display: 'flex', margin: 'auto', justifyContent: 'center', alignItems: 'center' }}>\n                                        You need an account to read and write blogs. Please enter a valid email and a password. Your password is safe with us. We promise.\n                                </DialogContentText>\n\n                                    <TextField\n                                        autoFocus\n                                        margin=\"dense\"\n                                        id=\"email-getstarted\"\n                                        label=\"Email\"\n                                        type=\"email\"\n                                        fullWidth\n                                        error={this.state.emailError}\n                                        helperText={this.state.emailErrorMessage}\n                                        disabled={this.state.dialogLoading}\n                                        onChange={event => this.setState({ getStartedEmail: event.target.value })}\n                                    />\n\n                                    <TextField\n                                        margin=\"dense\"\n                                        id=\"password-getstarted\"\n                                        label=\"Password\"\n                                        type=\"password\"\n                                        fullWidth\n                                        error={this.state.passwordError}\n                                        disabled={this.state.dialogLoading}\n                                        onChange={event => this.setState({ getStartedPassword: event.target.value })}\n                                        helperText='At least 6 characters, one uppercase and one lowercase'\n                                    />\n\n                                </DialogContent>\n                            </Grid>\n\n                        </Grid>\n\n                        <DialogActions>\n                            <Button onClick={() => this.setState({ getStartedDialog: false })} variant='text' color='default' style={{ textTransform: 'capitalize', fontSize: 18 }}>\n                                Cancel\n                        </Button>\n                            {/* {\n                                this.state.dialogLoading ?\n\n                                    <CircularProgress color='primary' size={24} variant=\"indeterminate\" style={{ marginLeft: 40, marginRight: 40 }} />\n\n                                    :\n                                    <Button onClick={() => this.handleGetStartedClick()} variant='contained' color=\"primary\" style={{ textTransform: 'capitalize', color: 'white', fontSize: 18, padding: 10 }}>\n                                        Sign Up\n                                </Button>\n\n                            } */}\n                            <Button onClick={() => this.setState({getStartedDialog: false})} variant='contained' color=\"primary\" style={{ textTransform: 'capitalize', color: 'white', fontSize: 18, padding: 10 }}>\n                                        Sign Up\n                                </Button>\n                        </DialogActions>\n\n                    </Dialog>\n\n                    <Dialog open={this.state.signInDialog}\n                        onClose={() => this.setState({ signInDialog: false })}\n                        onExited={() => this.setState({ emailError: false, emailErrorMessage: '', passwordError: false, passwordErrorMessage: '' })}\n                        aria-labelledby=\"form-dialog-title\" >\n\n                        <Grid container direction=\"column\" align=\"center\" justify=\"center\">\n\n                            <Grid item xs={12}>\n\n                                <DialogTitle id=\"form-dialog-title\">Sign In</DialogTitle>\n\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <DialogContent>\n\n                                    <DialogContentText style={{ display: 'flex', margin: 'auto', justifyContent: 'center', alignItems: 'center' }}>\n                                        You must already have an account to sign in. Please enter your email id and password. If you don't have an account, then sign up.\n                                </DialogContentText>\n\n                                    <TextField\n                                        autoFocus\n                                        margin=\"dense\"\n                                        id=\"username-signin\"\n                                        label=\"Username\"\n                                        type=\"text\"\n                                        fullWidth\n                                        error={this.state.emailError}\n                                        helperText={this.state.emailErrorMessage}\n                                        disabled={this.state.dialogLoading}\n                                        onChange={event => this.setState({ signInEmail: event.target.value })}\n                                    />\n\n                                    <TextField\n                                        margin=\"dense\"\n                                        id=\"password-signin\"\n                                        label=\"Password\"\n                                        type=\"password\"\n                                        fullWidth\n                                        error={this.state.passwordError}\n                                        helperText={this.state.passwordErrorMessage}\n                                        disabled={this.state.dialogLoading}\n                                        onChange={event => this.setState({ signInPassword: event.target.value })}\n                                    />\n\n                                </DialogContent>\n                            </Grid>\n\n                        </Grid>\n\n                        <DialogActions>\n                            <Button onClick={() => this.setState({ signInDialog: false })} variant='text' color='default' style={{ textTransform: 'capitalize', fontSize: 18, padding: 10 }}>\n                                Cancel\n                        </Button>\n                            {/*TODO: Complete the sign up functionality*/}\n                            {/* {\n                                this.state.dialogLoading ?\n\n                                    <CircularProgress color='primary' size={24} variant=\"indeterminate\" style={{ marginLeft: 40, marginRight: 40 }} />\n\n                                    :\n                                    <Button onClick={() => this.handleSignInClick()} variant='contained' color='primary' style={{ textTransform: 'capitalize', color: 'white', fontSize: 18, padding: 10 }}>\n                                        Sign In\n                                    </Button>\n\n                            } */}\n                            <Button onClick={() => this.setState({signInDialog: false})} variant='contained' color='primary' style={{ textTransform: 'capitalize', color: 'white', fontSize: 18, padding: 10 }}>\n                                        Sign In\n                                    </Button>\n                        </DialogActions>\n                    </Dialog>\n\n                    <Snackbar\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                        open={this.state.errorSnackbar}\n                        autoHideDuration={3000}\n                        onClose={() => this.setState({ errorSnackbar: false })}\n                        message={\n                            <Typography variant='body1'>\n                                An error occurred\n                        </Typography>\n                        }\n                        action={[\n                            <IconButton\n                                key=\"close\"\n                                aria-label=\"closse\"\n                                color=\"default\"\n                                onClick={() => this.setState({ errorSnackbar: false })}>\n                                <CloseIcon color='#fff' />\n                            </IconButton>,\n                        ]}\n                    >\n                    </Snackbar>\n\n                    <Snackbar\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                        open={this.state.successSnackbar}\n                        autoHideDuration={3000}\n                        onClose={() => this.setState({ successSnackbar: false })}\n                        message={\n                            <Typography variant='body1'>\n                                Success!\n                        </Typography>\n                        }\n                        action={[\n                            <IconButton\n                                key=\"close\"\n                                aria-label=\"closse\"\n                                color=\"default\"\n                                onClick={() => this.setState({ successSnackbar: false })}>\n                                <CloseIcon color='#fff' />\n                            </IconButton>,\n                        ]}\n                    >\n                    </Snackbar>\n\n                </div>\n            </ThemeProvider>\n           \n            \n        )\n    }\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Link from '@material-ui/core/Link';\n\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport Cookies from 'js-cookie';\n\nimport serverUrl from '../config'; \n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Footer from '../components/Footer';\n\n\nexport default class Dashboard extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            mainMenu: null,\n            userAvatar: null,\n            userName: '',\n            articles: null,\n            tags: null\n        }\n    }\n\n    async handleSignOutClick() {\n        this.setState({ mainMenu: false });\n\n        Cookies.remove('userAuthenticated');\n        Cookies.remove('userId');\n\n        this.props.history.replace('/');\n    }\n\n    async getArticlesForUser(userId) {\n\n        const url = `${serverUrl}/article/forUser?id=${userId}`;\n        console.log(url);\n\n        const rawResponse = await fetch(url, {\n            method: 'GET'\n        });\n\n        let content = await rawResponse.json();\n        console.log(content);\n\n        this.setState({ articles: content, tags: Object.keys(content) });\n        return;\n    }\n\n    async getUser(userId) {\n        console.log(userId);\n        const url = `${serverUrl}/users?userId=${userId}`;\n\n        const rawResponse = await fetch(url, {\n            method: 'GET'\n        });\n\n        const content = await rawResponse.json()\n        console.log(content);\n\n        return content;\n    }\n\n    componentDidMount() {\n        const userId = Cookies.get('userId');\n        const userAuthenticated = Cookies.get('userAuthenticated');\n        console.log(userId);\n\n        if (userAuthenticated == null || userId == null)\n            this.props.history.replace('/');\n        \n\n        this.getArticlesForUser(userId)\n            .then(() => this.getUser(userId))\n            .then((content) => this.setState({ userAvatar: content.user.avatar, userName: content.user.name, loading: false }))\n            .catch(error => {\n                console.error(error);\n                this.setState({ loading: false });\n            });\n    }\n\n\n    render() {\n\n        const theme = createMuiTheme({\n            palette: {\n                primary: {\n                    main: '#673ab7',\n                },\n                secondary: {\n                    light: '#828282',\n                    main: '#000',\n                    contrastText: '#fff',\n                },\n            },\n            typography: {\n                fontFamily: 'Nunito'\n            }\n        });\n\n\n        if (this.state.loading)\n            return (\n                <Backdrop\n                    open={this.state.loading}\n                >\n                    <CircularProgress color='inherit' />\n                </Backdrop>\n            )\n        \n        return (\n            <ThemeProvider theme={theme}>\n                <div>\n                    <AppBar position=\"sticky\" style={{ backgroundColor: 'white' }}>\n                        <Toolbar style={{paddingLeft: 80, paddingRight: 80}}>\n\n                            <Typography variant=\"h5\" style={{ flex: 1, color: 'black' }}>\n                                <Link color='inherit' onClick={() => this.props.history.push('/')}>\n                                    Reader\n                                </Link>\n                            </Typography>\n\n                            <Button\n                                variant='outlined'\n                                style={{ paddingLeft: 20, paddingRight: 20, marginRight: 40, textTransform: 'capitalize' }}\n                                color='primary'>\n                                Upgrade\n                            </Button>\n\n                            <Avatar\n                                src={this.state.userAvatar}\n                                variant='circle'\n                                style={{ height: '40px', width: '40px', borderColor: 'primary', borderWidth: 2 }}\n                                onClick={(event) => this.setState({ mainMenu: event.currentTarget })} >\n                                <PersonIcon />\n                            </Avatar>\n                        </Toolbar>\n                    </AppBar>\n\n                    <div style={{paddingLeft: 80, paddingRight: 80}}>\n                        {\n                            this.state.tags.map((tag) => (\n\n                                this.state.articles[tag].length === 0 ? null :\n\n                                <div style={{ margin: 20 }} key={tag}>\n                                    <Typography variant='h4' style={{ marginBottom: 20 }}>\n                                        {tag}\n                                    </Typography>\n\n                                    <GridList style={{ flexWrap: 'nowrap', transform: 'translateZ(0)' }} cols={5}>\n                                        {\n                                            this.state.articles[tag].map((article) => (\n\n                                                <GridListTile\n                                                    key={article.id}\n                                                    style={{\n                                                        height: '200px',\n                                                        width: '300px',\n                                                        margin: 8,\n                                                        boxShadow: '0px 2px 3px 3px rgb(0,0,0,0.4)',\n                                                        paddding: 0\n                                                    }}>\n\n                                                    <img src={article.image} onClick={() => this.props.history.push(`/articles/${article.id}`)}/>\n\n                                                    <GridListTileBar\n                                                        title={article.title}\n                                                        style={{\n                                                            padding: 4,\n                                                            background: 'linear-gradient(to top, rgba(0,0,0,1) 10%, rgba(0,0,0,0.4) 70%, rgba(0,0,0,0) 100%)',\n\n                                                        }}\n                                                        actionIcon={<Avatar src={article.author.avatar}></Avatar>}\n                                                        subtitle={\n                                                            <Link color='inherit' onClick={() => this.props.history.push(`/users/${article.author.id}`)}>\n                                                                {article.author.name}\n                                                            </Link>\n                                                        }\n                                                    >\n                                                    </GridListTileBar>\n                                                </GridListTile>\n                                            ))\n                                        }\n\n                                    </GridList>\n                                </div>\n\n                            ))\n                        }\n\n                        <Menu\n                            id='main-menu'\n                            anchorEl={this.state.mainMenu}\n                            keepMounted\n                            open={Boolean(this.state.mainMenu)}\n                            onClose={() => this.setState({ mainMenu: false })}>\n\n                            <MenuItem>\n                                <Grid container direction='row' spacing={4}>\n                                    <Grid item container justify='center' alignItems='center'>\n                                        <Avatar\n                                            src={this.state.userAvatar}\n                                            variant='circle'\n                                            style={{ height: '64px', width: '64px'}} >\n                                            <PersonIcon />\n                                        </Avatar>\n                                    </Grid>\n\n                                    <Grid container item justify='center' alignItems='center'>\n                                        <Typography variant='body1' align='center' style={{fontSize: 24}}>\n                                            <Link color='inherit' onClick={() => this.props.history.push('/editProfile')}>\n                                                {this.state.userName}\n                                            </Link>\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </MenuItem>\n\n                            <MenuItem onClick={() => this.props.history.push('/writeArticle')} style={{ padding: 16 }}>\n                                <Typography variant='body1' align='center'>\n                                    New Article\n                                </Typography>\n                            </MenuItem>\n\n                            <MenuItem onClick={() => this.setState({ mainMenu: false })} style={{ padding: 16 }}>\n                                <Typography variant='body1' align='center'>\n                                    Help\n                                </Typography>\n                            </MenuItem>\n\n                            <MenuItem onClick={() => this.handleSignOutClick()} style={{ padding: 16 }}>\n                                <Typography variant='body1' align='center'>\n                                    Sign Out\n                                </Typography>\n                            </MenuItem>\n                        </Menu>\n\n                        <Footer />\n                    </div>\n                    \n                </div>\n            </ThemeProvider>\n            \n            \n        )\n    }\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport Footer from '../components/Footer';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\nimport serverUrl from '../config';\n\nimport Cookies from 'js-cookie';\n\nimport imageCompression from 'browser-image-compression';\n\n\n\nexport default class Profile extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            userName: '',\n            userAbout: '',\n            userAvatar: '',\n            userNameError: false,\n            userNameErrorMessage: '',\n            userAboutError: false,\n            userAboutErrorMessage: '',\n            compressing: false,\n            reader: new FileReader(),\n            encodedImage: ''\n        }\n\n        this.imageInput = null;\n        \n    }\n\n    async validateName() {\n        var reg = /^[A-Za-z ]+$/;\n        if (!reg.test(this.state.userName)) {\n            throw Error('ERR_NAME');\n        }\n    }\n\n    async validateAbout() {\n        if (!this.state.userAbout)\n            throw Error('ERR_ABOUT');\n    }\n\n    async setProfile() {\n        //Send a put request to the users endpoint to update the name and about values in the table\n        const id = await Cookies.get('userId');\n\n        const body = JSON.stringify({\n            id: id,\n            name: this.state.userName,\n            about: this.state.userAbout,\n            avatar: this.state.encodedImage\n        });\n\n        console.log(body);\n\n        let rawResponse = await fetch(serverUrl + '/users/update', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            body: body\n        });\n\n        const content = await rawResponse.json();\n        console.log(content);\n        if (content.error)\n            throw Error('ERR_UPDATE');\n    }\n\n    handleProfileSubmit() {\n        console.log('Called handleProfileSubmit');\n\n        this.validateName()\n            .then(() => this.validateAbout())\n            .then(() => this.setProfile())\n            .then(() => {\n                //TODO: Profile has been successfully created. Move to the dashboard\n                Cookies.set('profileComplete', true);\n                this.props.history.replace('/dashboard');\n            })\n            .catch(error => {\n                //TODO: Add Snackbar for errors\n                console.error(error);\n            });\n    }\n\n    imageSelectHandler = event => {\n\n        console.log(event.target.files[0]);\n        this.setState({ compressing: true, encodedImage: null });\n        var reader = this.state.reader;\n\n        imageCompression(event.target.files[0], {\n            maxSizeMB: 1\n        })\n            .then((file) => {\n                console.log(file);\n                // File is of Blob type. Convert to base64 for displaying and uploading\n\n                reader.addEventListener('loadend', () => {\n                    console.log(reader.result);\n                    this.setState({ encodedImage: reader.result });\n                });\n\n                reader.readAsDataURL(file);\n            })\n            .catch((error) => {\n                console.error(error);\n                this.setState({ compressing: false, encodedImage: this.state.userAvatar });\n            });\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n        const theme = createMuiTheme({\n            palette: {\n                primary: {\n                    main: '#673ab7',\n                },\n                secondary: {\n                    light: '#828282',\n                    main: '#000',\n                    contrastText: '#fff',\n                },\n            },\n            typography: {\n                fontFamily: 'Nunito'\n            }\n        });\n\n        return (\n            <ThemeProvider theme={theme}>\n                <div>\n                    <AppBar position=\"sticky\" style={{ backgroundColor: 'white' }}>\n                        <Toolbar style={{ paddingLeft: 80, paddingRight: 80 }}>\n\n                            <Typography variant=\"h5\" style={{ flex: 1, color: '#000' }} onClick={() => this.props.history.push('/')}>\n                                Reader\n                            </Typography>\n\n                        </Toolbar>\n                    </AppBar>\n\n                    <div style={{ paddingLeft: 300, paddingRight: 300, paddingTop: 80 }}>\n                        <Typography variant=\"h4\" align='center' style={{ marginBottom: 8 }}>\n                            Your Profile\n                        </Typography>\n\n                        <Typography variant='body1' align='center' style={{ marginTop: 8 }}>\n                            This is your profile. Make sure it looks nice.\n                        </Typography>\n\n                        <Divider variant='middle' style={{ marginTop: 64, marginBottom: 64, height: 4 }} />\n\n                        <Grid container direction=\"row\" >\n\n                            <Grid container xs={6} item justify='center' alignItems='center' direction=\"column\">\n\n                                <TextField\n                                    variant='standard'\n                                    onChange={event => this.setState({ userName: event.target.value, userNameChanged: true })}\n                                    error={this.state.userNameError}\n                                    value={this.state.userName}\n                                    label='Name'\n                                    placeholder={'Full Name'}\n                                    fullWidth\n                                    style={{\n                                        fontSize: 26,\n                                        padding: 20,\n                                        fontStyle: 'bold',\n                                    }}\n                                    inputProps={{ style: { textAlign: 'center', fontSize: 24 } }}\n                                />\n\n                                <TextField\n                                    variant='standard'\n                                    onChange={event => this.setState({ userAbout: event.target.value, userAboutChanged: true })}\n                                    error={this.state.userAboutError}\n                                    value={this.state.userAbout}\n                                    label='About'\n                                    placeholder={'Something about you'}\n                                    fullWidth\n                                    multiline\n                                    rowsMax={3}\n                                    style={{\n                                        padding: 20,\n                                        fontStyle: 'bold',\n                                        textAlign: 'center'\n                                    }}\n                                    inputProps={{ style: { textAlign: 'center' } }}\n                                />\n\n                            </Grid>\n\n                            <Grid container item xs={6} justify='center' alignItems='center' direction='column'>\n                                <Avatar\n                                    src={this.state.encodedImage}\n                                    variant='circle'\n                                    style={{ height: '160px', width: '160px' }}\n                                    alt={this.state.userName}\n                                >\n                                    {\n                                        this.state.compressing ? <CircularProgress /> : <PersonIcon />\n                                    }\n                                </Avatar>\n\n                                <Button\n                                    variant='outlined'\n                                    color='primary'\n                                    onClick={() => this.imageInput.click()}\n                                    style={{ marginTop: 40, paddingLeft: 40, paddingRight: 40, textTransform: 'capitalize' }}\n                                >\n                                    <Typography variant='h6' align='center'>\n                                        Select Picture\n                                    </Typography>\n                                </Button>\n                                <input\n                                    style={{ display: 'none' }}\n                                    type='file'\n                                    onChange={this.imageSelectHandler}\n                                    ref={imageInput => this.imageInput = imageInput}\n                                />\n\n                            </Grid>\n\n                        </Grid>\n\n                        <Divider variant='middle' style={{ marginTop: 64, marginBottom: 64, height: 4 }} />\n\n                        <Typography align='center'>\n                            <Button\n                                variant='contained'\n                                size='large'\n                                align='center'\n                                color='primary'\n                                onClick={() => this.handleProfileSubmit()}\n                                style={{ paddingLeft: 80, paddingRight: 80 }}>\n\n                                Submit\n                            </Button>\n                        </Typography>\n                    </div>\n\n                    \n\n                    <Footer />\n                </div>\n            </ThemeProvider>\n        )\n    }\n}\n\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Link from '@material-ui/core/Link';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport PersonIcon from '@material-ui/icons/Person';\n\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Chip from '@material-ui/core/Chip';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\n\nimport Input from '@material-ui/core/Input';\n\nimport Cookies from 'js-cookie';\n\nimport imageCompression from 'browser-image-compression';\n\nimport Footer from '../components/Footer';\n\nimport serverUrl from '../config';\n\nexport default class WriteArticle extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            mainMenu: null,\n            userName: null,\n            userAvatar: null,\n            articleMenu: null,\n            tagDialog: false,\n            publishing: false,\n            title: '',\n            body: '',\n            tags: [\n                { word: 'Entertainment', selected: false },\n                { word: 'Faishon', selected: false},\n                { word: 'Finance', selected: false },\n                { word: 'Fitness', selected: false},\n                { word: 'Relationship', selected: false },\n                { word: 'Technology', selected: false}\n            ],\n            selectedIndex: null,\n            encodedImage: '',\n            blobImage: null\n        }\n\n        this.imageInput = null;\n    }\n\n    async validateTitle() {\n        if (this.state.title.length == 0)\n            throw Error('ERR_NULL_TITLE');\n    }\n\n    async validateBody() {\n        if (this.state.body.length == 0)\n            throw Error('ERR_NULL_BODY');\n    }\n\n    async validateTag() {\n        if (this.state.selectedTag == '')\n            throw Error('ERR_NO_SELECTION');\n    }\n\n\n\n    async publishArticle() {\n        //First get the cookie value with user id\n        const userId = Cookies.get('userId');\n\n        /*\n        The steps followed to save the article in the database\n\n        1. Insert the article in articles table \n        2. Get the article id and insert it into the users's wrtten articles array\n        3. Insert the article id into the choices tables that the author has selected for it\n        */\n        \n        const body = JSON.stringify({\n            userId: userId,\n            articleTitle: this.state.title,\n            articleBody: this.state.body,\n            articleTag: this.state.tags[this.state.selectedIndex].word.toLowerCase(),\n            articleImage: this.state.encodedImage\n        });\n        console.log(body);\n        \n        const rawResponse = await fetch(serverUrl + '/article/new', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            body: body\n        });\n\n        let content = await rawResponse.json();\n        console.log(content);\n\n        return content.newBlogId;\n    }\n\n    handlePublishArticle() {\n        this.setState({ publishing: true });\n\n        this.validateTitle()\n            .then(() => this.validateBody())\n            .then(() => this.publishArticle())\n            .then((newArticleId) => {\n                this.setState({ publishing: false });\n                this.props.history.replace(`/articles/${newArticleId}`);\n            })\n            .catch((error) => {\n                console.error(error);\n                this.setState({ publishing: false });\n                //TODO: Snackbar for errors\n            });\n    }\n\n    handleTagClick(index) {\n\n        if (this.state.tags[index].selected) {\n            this.state.tags[index].selected = false;\n            this.setState({ selectedIndex: null });\n        }\n        else {\n            if (this.state.selectedIndex != null) {\n\n                this.state.tags[this.state.selectedIndex].selected = false;\n                this.state.tags[index].selected = true;\n                this.setState({ selectedIndex: index });\n            }\n            else {\n                this.state.tags[index].selected = true;\n                this.setState({ selectedIndex: index });\n            }\n        }\n        this.forceUpdate();\n    }\n\n    imageSelectHandler = event => {\n        //this.getBase64(event.target.files[0]);\n\n        console.log(event.target.files[0]);\n\n        imageCompression.getDataUrlFromFile(event.target.files[0])\n            .then(encodedImage => {\n                this.setState({ encodedImage });\n                console.log(encodedImage);\n            });\n    }\n\n    async getUser(userId) {\n        console.log(userId);\n        const url = `${serverUrl}/users?userId=${userId}`;\n\n        const rawResponse = await fetch(url, {\n            method: 'GET'\n        });\n\n        const content = await rawResponse.json()\n        console.log(content);\n\n        return content;\n    }\n\n    componentDidMount() {\n        const userId = Cookies.get('userId');\n\n        this.getUser(userId)\n        .then((content) => this.setState({ userAvatar: content.user.avatar, userName: content.user.name, loading: false}))\n    }\n\n    render() {\n        const theme = createMuiTheme({\n            palette: {\n                primary: {\n                    main: '#673ab7',\n                },\n                secondary: {\n                    light: '#828282',\n                    main: '#000',\n                    contrastText: '#fff',\n                },\n            },\n            typography: {\n                fontFamily: 'Nunito'\n            }\n        });\n\n        if (this.state.loading)\n            return (\n                <Backdrop\n                    open={this.state.loading}\n                >\n                    <CircularProgress color='default' />\n                </Backdrop>\n            )\n        return (\n            <ThemeProvider theme={theme}>\n                <div>\n                    <AppBar position=\"sticky\" style={{ backgroundColor: 'white' }}>\n                        <Toolbar style={{paddingLeft: 80, paddingRight: 80}}>\n    \n                            <Typography variant=\"h5\" style={{ flex: 1, color: 'black' }}>\n                                <Link color='inherit' onClick={() => this.props.history.push('/')}>\n                                    Reader\n                                </Link>\n                            </Typography>\n\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                style={{ paddingLeft: 40, paddingRight: 40, marginRight: 40, textTransform: 'capitalize' }}\n                                onClick={() => this.setState({ tagDialog: true })}>\n                                <Typography align='center' variant='h6'>\n                                    Publish   \n                                </Typography>\n                            </Button>\n                            \n                            <Avatar\n                                src={this.state.userAvatar}\n                                variant='circle'\n                                style={{ height: '40px', width: '40px'}}\n                                onClick={(event) => this.setState({ mainMenu: event.currentTarget })} />                         \n                            \n                        </Toolbar>\n                    </AppBar>\n\n                <Menu\n                    id='main-menu'\n                    anchorEl={this.state.mainMenu}\n                    keepMounted\n                    open={Boolean(this.state.mainMenu)}\n                    onClose={() => this.setState({ mainMenu: false })}>\n\n                    <MenuItem>\n                        <Grid container direction='row' spacing={4}>\n                            <Grid item container justify='center' alignItems='center'>\n                                <Avatar\n                                    src={this.state.userAvatar}\n                                    variant='circle'\n                                    style={{ height: '64px', width: '64px' }} >\n                                    <PersonIcon />\n                                </Avatar>\n                            </Grid>\n\n                            <Grid container item justify='center' alignItems='center'>\n                                <Typography variant='body1' align='center' style={{ fontSize: 24 }}>\n                                    <Link color='inherit' onClick={() => this.props.history.push('/editProfile')}>\n                                        {this.state.userName}\n                                    </Link>\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        </MenuItem>\n                        \n                        <MenuItem onClick={() => this.props.history.push('/')} style={{ padding: 16 }}>\n                            <Typography variant='body1' align='center'>\n                                Dashboard\n                            </Typography>\n                        </MenuItem>\n                        \n                    <MenuItem onClick={() => this.setState({ mainMenu: false })} style={{ padding: 16 }}>\n                        <Typography variant='body1' align='center'>\n                            Help\n                        </Typography>\n                    </MenuItem>\n                        \n                    <MenuItem onClick={() => this.setState({ mainMenu: false })} style={{ padding: 16 }}>\n                        <Typography variant='body1' align='center'>\n                            Sign Out\n                        </Typography>\n                    </MenuItem>\n                </Menu>\n\n                <input\n                    style={{ display: 'none' }}\n                    type='file'\n                    onChange={this.imageSelectHandler}\n                    ref={imageInput => this.imageInput = imageInput}\n                />\n\n                {\n                    this.state.encodedImage == '' ? \n                    \n                    <div style={{ alignItems: 'center', justifyContent: 'center', marginTop: 40 }}>\n                        <Typography variant='h6' align='center'>\n                            No cover image selected\n                        </Typography>\n\n                        <Typography variant='body1' align='center'>\n                            Here you can preview the cover image for your article. This will be displayed on the dashboard of other users.\n                        </Typography>\n                            \n                        <Typography align='center'>\n                                <Button\n                                    variant='outlined'\n                                    color='primary'\n                                    style={{ marginTop: 20, marginBottom: 20 }}\n                                    onClick={() => this.imageInput.click()}>\n                                Select Image\n                            </Button>\n                        </Typography>\n                        \n                    </div>\n                :\n                    <div style={{ alignItems: 'center', justifyContent: 'center', display: 'flex', marginTop: 40 }}>\n\n                        <img\n                            src={this.state.encodedImage}\n                            style={{ objectFit: 'cover', width: '40%', height: 'auto' }}\n                            />\n                    </div>\n                }\n\n                <div style={{ marginLeft: 240, marginRight: 240, paddingTop: 40 }}>\n                    \n                    <Input\n                        placeholder='Title'\n                        style={{ fontSize: 32, marginTop: 80, marginBottom: 20 }}\n                        fullWidth\n                        multiline\n                        rowsMax={3}\n                        onChange={(event) => this.setState({title: event.target.value})}/>\n                    \n                    <Input\n                        placeholder='Write your article'\n                        style={{ fontSize: 18, marginTop: 20, marginBottom: 20 }}\n                        fullWidth\n                        multiline\n                        onChange={(event) => this.setState({ body: event.target.value})}/>\n                </div>\n\n                <Dialog\n                    open={this.state.tagDialog}\n                    onBackdropClick={(event) => console.log('Backdrop Clicked')}\n                    onClose={() => this.setState({ tagDialog: false })}\n                    onExited={() => this.setState({ publishing: false })}\n                    aria-labelledby=\"form-dialog-title\"\n                    style={{padding: 40}}>      \n                    \n                    <Typography variant='h5' align='center' style={{ margin: 20 }}>\n                        One Last Thing\n                    </Typography>\n                            \n                    <Typography variant='body1' align='center' style={{ margin: 20 }}>\n                        You have almost completed your article. Just one last thing. Select a category that makes it easier for readers to find you article on Reader. Think it as a #hashtag.\n                    </Typography>\n                                      \n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexWrap: 'wrap' }}>\n                        {\n                                this.state.tags.map((tagObj, i) => (\n                                    <Chip\n                                        key={i}\n                                        clickable\n                                        color={this.state.tags[i].selected ? 'primary' : 'secondary'}\n                                        icon={<CheckCircleOutlineIcon />}\n                                        label={<Typography variant='body1'>{tagObj.word}</Typography>}\n                                        style={{ margin: 8, padding: 16 }}\n                                        onClick={() => this.handleTagClick(i)}\n                                    />\n                            ))\n                        }\n                    </div>\n\n                    <DialogActions>\n                        <Button onClick={() => this.setState({ tagDialog: false })} variant='text' color='default' style={{ textTransform: 'capitalize', fontSize: 18 }}>\n                            Cancel\n                        </Button>\n                        {\n                            this.state.publishing ?\n\n                                <CircularProgress color='primary' size={24} variant=\"indeterminate\" style={{ marginLeft: 40, marginRight: 40 }} />\n\n                                :\n                                <Button onClick={() => this.handlePublishArticle()} variant='contained' color=\"primary\" style={{ textTransform: 'capitalize', color: 'white', fontSize: 18, padding: 10 }}>\n                                    Publish\n                                </Button>\n\n                        }\n                    </DialogActions>\n\n                </Dialog>\n                \n                <Footer/>\n            </div>\n            </ThemeProvider>\n        )\n    }\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\n\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport serverUrl from '../config';\n\nimport Cookies from 'js-cookie';\n\nimport PersonIcon from '@material-ui/icons/Person';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Backdrop from '@material-ui/core/Backdrop';\n\n\nexport default class Article extends React.Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            mainMenu: null,\n            userAvatar: '',\n            userName: '',\n            articleBody: '',\n            articleImage: '',\n            articleLikes: null,\n            articleReads: null,\n            articleTitle: '',\n            authorAbout: '',\n            authorAvatar: null,\n            authorName: '',\n            error: false,\n            errorMessage: 'ERR_NONE'\n        }\n    }\n\n    async getArticle() {\n\n        const articleId = this.props.match.params.articleId;\n\n        let rawResponse = await fetch(serverUrl + `/article?articleId=${articleId}`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n\n        const content = await rawResponse.json();\n        console.log(content);\n\n        return content;\n\n    }\n\n    async getUser(userId) {\n        console.log(userId);\n        const url = `${serverUrl}/users?userId=${userId}`;\n\n        const rawResponse = await fetch(url, {\n            method: 'GET'\n        });\n\n        const content = await rawResponse.json()\n        console.log(content);\n\n        this.setState({ userAvatar: content.user.avatar ? content.user.avatar : '', userName: content.user.name });\n        return;\n    }\n\n    componentDidMount() {\n        const userId = Cookies.get('userId');\n\n        this.getUser(userId)\n            .then(() => this.getArticle())\n            .then((article) => {\n                // Article contains the details about the article. Set these is state to use them in render\n                \n                const { articleBody, articleImage, articleLikes, articleReads, articleTitle } = article;\n                const { authorName, authorAbout, authorAvatar } = article.author;\n                \n                this.setState({ articleTitle, articleImage, articleBody, articleLikes, articleReads, authorName, authorAbout, authorAvatar, loading: false });\n                console.log(this.state);\n            })\n            .catch(error => {\n                console.error(error);\n                this.setState({ loading: false });\n            });\n\n    }\n\n    render() {\n\n        const theme = createMuiTheme({\n            palette: {\n                primary: {\n                    main: '#673ab7',\n                },\n                secondary: {\n                    light: '#828282',\n                    main: '#000',\n                    contrastText: '#fff',\n                },\n            },\n            typography: {\n                fontFamily: 'Nunito'\n            }\n        });\n\n        if (this.state.loading) {\n            return (\n                <Backdrop\n                    open={this.state.loading}\n                >\n                    <CircularProgress color='#fff' />\n                </Backdrop>\n            )\n        }\n\n        return (\n            <ThemeProvider theme={theme}>\n                <div>\n                    <AppBar position=\"sticky\" style={{ backgroundColor: 'white' }}>\n                        <Toolbar style={{ paddingLeft: 80, paddingRight: 80 }}>\n\n                            <Typography variant=\"h5\" style={{ flex: 1, color: 'black'}}>\n                                <Link color='default' onClick={() => this.props.history.push('/')}>\n                                    Reader\n                                </Link>\n                            </Typography>\n\n                            <Button\n                                variant='outlined'\n                                style={{ paddingLeft: 20, paddingRight: 20, marginRight: 40, textTransform: 'capitalize' }}\n                                color='primary'>\n                                Upgrade\n                            </Button>\n\n                            <Avatar\n                                src={this.state.userAvatar}\n                                variant='circle'\n                                style={{ height: '40px', width: '40px' }}\n                                onClick={(event) => this.setState({ mainMenu: event.currentTarget })} >\n                                <PersonIcon color='black' />\n                            </Avatar>\n                        </Toolbar>\n                    </AppBar>\n\n                    <Menu\n                        id='main-menu'\n                        anchorEl={this.state.mainMenu}\n                        keepMounted\n                        open={Boolean(this.state.mainMenu)}\n                        onClose={() => this.setState({ mainMenu: false })}>\n\n                        <MenuItem>\n                            <Grid container direction='row' spacing={4}>\n                                <Grid item container justify='center' alignItems='center'>\n                                    <Avatar\n                                        src={this.state.userAvatar}\n                                        variant='circle'\n                                        style={{ height: '64px', width: '64px' }} >\n                                        <PersonIcon />\n                                    </Avatar>\n                                </Grid>\n\n                                <Grid container item justify='center' alignItems='center'>\n                                    <Typography variant='body1' align='center' style={{ fontSize: 24 }}>\n                                        <Link color='inherit' onClick={() => this.props.history.push('/editProfile')}>\n                                            {this.state.userName}\n                                        </Link>\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </MenuItem>\n\n                        <MenuItem onClick={() => {\n                            this.setState({ mainMenu: false });\n                            this.props.history.replace('/dashboard');\n                        }}\n                        style={{padding: 16}}>\n                            Dashboard\n                        </MenuItem>\n\n                        <MenuItem onClick={() => this.setState({ mainMenu: false })} style={{ padding: 16 }}>Help</MenuItem>\n                        <MenuItem onClick={() => this.setState({ mainMenu: false })} style={{ padding: 16 }}>Sign Out</MenuItem>\n                    </Menu>\n\n                    <div style={{ marginLeft: 300, marginRight: 300, paddingTop: 100, paddingBottom: 100 }}>\n\n                        <Typography variant='h2' style={{ marginBottom: 40 }}>\n                            {this.state.articleTitle}\n                        </Typography>\n\n                        <Grid container direction='row' spacing={4} style={{marginTop: 16, marginBottom: 16}}>\n                            <Grid item>\n                                <Avatar\n                                    src={this.state.authorAvatar}\n                                    variant='circle'\n                                    style={{ height: '72px', width: '72px'}}\n                                >\n                                    {this.state.authorName}\n                                </Avatar>\n                            </Grid>\n\n                            <Grid item direction='column'>\n                                <Typography variant='h5' style={{ marginTop: 8, marginBottom: 8 }}>{this.state.authorName}</Typography>\n                                <Typography variant='body1' style={{ marginTop: 8, marginBottom: 8 }}>{this.state.authorAbout}</Typography>\n                            </Grid>\n                        </Grid>\n\n                        <img\n                            src={this.state.articleImage}\n                            style={{ objectFit: 'cover', width: '100%', height: 'auto' }}\n                        />\n\n                        {this.state.articleBody.split('\\n').map((i, key) => {\n                            return (\n                                <div>\n                                    <br></br>\n                                    <Typography key={key}>\n                                        {i}\n                                    </Typography>\n                                </div>\n\n                            )\n                        })}\n\n\n                    </div>\n                </div>\n            </ThemeProvider>\n        )\n    }\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider'\n\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Link from '@material-ui/core/Link';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport TextField from '@material-ui/core/TextField';\n\n\nimport Footer from '../components/Footer';\n\n\nimport serverUrl from '../config';\n\nimport Cookies from 'js-cookie';\n\nimport imageCompression from 'browser-image-compression';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\n\n\nexport default class EditProfile extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            disabled: true,\n            userName: '',\n            userAbout: '',\n            userAvatar: '',\n            userNameChanged: false,\n            userAboutChanged: false,\n            userAvatarChanged: false,\n            userNameError: false,\n            userNameErrorMessage: '',\n            userAboutError: false,\n            userAboutErrorMessage: '',\n            compressing: false,\n            reader: new FileReader(),\n            encodedImage: '',\n        }\n\n        this.imageInput = null;\n\n    }\n\n    imageSelectHandler = event => {\n\n        console.log(event.target.files[0]);\n\n        this.setState({ compressing: true, encodedImage: null });\n\n        var reader = this.state.reader;\n\n        imageCompression(event.target.files[0], {\n            maxSizeMB: 1\n        })\n            .then((file) => {\n                console.log(file);\n                // File is of Blob type. Convert to base64 for displaying and uploading\n\n                reader.addEventListener('loadend', () => {\n                    console.log(reader.result);\n                    this.setState({ encodedImage: reader.result, userAvatarChanged: true, compressing: false });\n                });\n\n                reader.readAsDataURL(file);\n            })\n            .catch((error) => {\n                console.error(error);\n                this.setState({ compressing: false, encodedImage: this.state.userAvatar });\n            });\n    }\n\n    async getUser(userId) {\n\n        const url = `${serverUrl}/users?userId=${userId}`;\n\n        const rawResponse = await fetch(url, {\n            method: 'GET'\n        });\n\n        const content = await rawResponse.json();\n\n        return content;\n\n    }\n\n\n    // All methods to update profile. Check in each if value has changed. Only then make the request.\n    async validateName() {\n        var reg = /^[A-Za-z ]+$/;\n        if (!reg.test(this.state.userName)) {\n            throw Error('ERR_NAME');\n        }\n    }\n\n    async validateAbout() {\n        if (!this.state.userAbout)\n            throw Error('ERR_ABOUT');\n    }\n\n    async updateProfile() {\n\n        const userId = Cookies.get('userId');\n        console.log(userId);\n\n        let rawResponse = await fetch(serverUrl + '/users/update', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            body: JSON.stringify({\n                id: userId,\n                name: this.state.userName,\n                about: this.state.userAbout,\n                avatar: this.state.userAvatarChanged ? this.state.encodedImage : null\n            })\n        });\n\n        const content = await rawResponse.json();\n        console.log(content);\n\n        if (content.error)\n            throw Error('ERR_UPDATE');\n        \n        return content;\n    }\n\n    handleProfileSubmit() {\n        this.setState({ loading: true });\n        this.validateName()\n            .then(() => this.validateAbout())\n            .then(() => this.updateProfile())\n            .then((content) => {\n                console.log(content);\n                this.props.history.goBack();\n            })\n            .catch((error) => {\n                console.error(error);\n                this.setState({ loading: false });\n                // TODO: Handle error conditions\n        })\n    }\n\n    componentDidMount() {\n\n        const userId = Cookies.get('userId');\n\n        this.getUser(userId)\n            .then((content) => {\n                console.log(content);\n\n                const { name, about, avatar } = content.user;\n                \n                this.setState({ userName: name, userAvatar: avatar, encodedImage: avatar, userAbout: about });\n            \n            }) \n            .catch(error => {\n                console.error(error);\n        })\n    }\n\n    render() {\n        const theme = createMuiTheme({\n            palette: {\n                primary: {\n                    main: '#673ab7',\n                },\n                secondary: {\n                    light: '#828282',\n                    main: '#000',\n                    contrastText: '#fff',\n                },\n            },\n            typography: {\n                fontFamily: 'Nunito'\n            }\n        });\n\n        return (\n            <ThemeProvider theme={theme}>\n                <div>\n                    <AppBar position=\"sticky\" style={{ backgroundColor: 'white' }}>\n                        <Toolbar style={{ paddingLeft: 80, paddingRight: 80 }}>\n\n                            <Typography variant=\"h5\" style={{ flex: 1, color: 'black' }} onClick={() => this.props.history.push('/dashboard')}>\n                                <Link color='default' onClick={() => this.props.history.push('/')}>\n                                    Reader\n                                </Link>\n                            </Typography>\n\n                            <Button\n                                variant='outlined'\n                                style={{ paddingLeft: 20, paddingRight: 20, marginRight: 40, textTransform: 'capitalize' }}\n                                color='primary'>\n                                Upgrade\n                            </Button>\n\n                            <Avatar\n                                src={this.state.userAvatar}\n                                variant='circle'\n                                style={{ height: '40px', width: '40px' }}\n                                onClick={(event) => this.setState({ mainMenu: event.currentTarget })} >\n                                <PersonIcon color='#000' />\n                            </Avatar>\n\n\n                        </Toolbar>\n                    </AppBar>\n\n                    <Menu\n                        id='main-menu'\n                        anchorEl={this.state.mainMenu}\n                        keepMounted\n                        open={Boolean(this.state.mainMenu)}\n                        onClose={() => this.setState({ mainMenu: false })}>\n\n                        <MenuItem>\n                            <Grid container direction='row' spacing={4}>\n                                <Grid item container justify='center' alignItems='center'>\n                                    <Avatar\n                                        src={this.state.userAvatar}\n                                        variant='circle'\n                                        style={{ height: '64px', width: '64px' }} >\n                                        <PersonIcon />\n                                    </Avatar>\n                                </Grid>\n\n                                <Grid container item justify='center' alignItems='center'>\n                                    <Typography variant='body1' align='center' style={{ fontSize: 24 }}>\n                                        <Link color='inherit' onClick={() => this.props.history.push('/editProfile')}>\n                                            {this.state.userName}\n                                        </Link>\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </MenuItem>\n\n                        <MenuItem onClick={() => this.props.history.push('/dashboard')} style={{ padding: 16 }}>\n                            <Typography variant='body1' align='center'>\n                                Dashboard\n                            </Typography>\n                        </MenuItem>\n\n                        <MenuItem onClick={() => this.props.history.push('/writeArticle')} style={{ padding: 16 }}>\n                            <Typography variant='body1' align='center'>\n                                New Article\n                                </Typography>\n                        </MenuItem>\n\n                        <MenuItem onClick={() => this.setState({ mainMenu: false })} style={{ padding: 16 }}>\n                            <Typography variant='body1' align='center'>\n                                Help\n                                </Typography>\n                        </MenuItem>\n\n                        <MenuItem onClick={() => this.handleSignOutClick()} style={{ padding: 16 }}>\n                            <Typography variant='body1' align='center'>\n                                Sign Out\n                                </Typography>\n                        </MenuItem>\n                    </Menu>\n\n                        <div style={{paddingLeft: 300, paddingRight: 300, paddingTop: 80}}>\n                            \n                        <Typography variant=\"h4\" align='center' style={{marginBottom: 8}}>\n                            Your Profile\n                        </Typography>\n\n                        <Typography variant='body1' align='center' style={{ marginTop: 8 }}>\n                            Update your profile\n                        </Typography>\n\n                        <Divider variant='middle' style={{marginTop: 64, marginBottom: 64, height: 4}}/>\n\n                        <Typography align='center'>\n                            <Button\n                                variant='outlined'\n                                style={{\n                                    marginBottom: 40,\n                                    textTransform: 'capitalize',\n                                    paddingLeft: 40, \n                                    paddingRight: 40\n                                }}\n                                color='primary'\n                                onClick={() => this.setState({ disabled: false })}\n                            >\n                                <Typography variant='h6' align='center'>\n                                    Edit Profile\n                                </Typography>\n                            </Button>\n                            {/* Show Snackbar to inform user that all fields have been enabled */}\n                        </Typography>\n\n                        <Grid container direction=\"row\" >\n\n                            <Grid container xs={6} item justify='center' alignItems='center' direction=\"column\">\n\n                                <TextField\n                                    variant='standard'\n                                    onChange={event => this.setState({ userName: event.target.value, userNameChanged: true })}\n                                    error={this.state.userNameError}\n                                    value={this.state.userName}\n                                    label='Name'\n                                    placeholder={'Full Name'}\n                                    fullWidth\n                                    style={{\n                                        fontSize: 26,\n                                        padding: 20,\n                                        fontStyle: 'bold',\n                                    }}\n                                    inputProps={{ style: { textAlign: 'center', fontSize: 24 } }}\n                                    disabled={this.state.disabled}/>\n                                \n                                <TextField\n                                    variant='standard'\n                                    onChange={event => this.setState({ userAbout: event.target.value, userAboutChanged: true })}\n                                    error={this.state.userAboutError}\n                                    value={this.state.userAbout}\n                                    label='About'\n                                    placeholder={'Something about you'}\n                                    fullWidth\n                                    multiline\n                                    rowsMax={3}\n                                    style={{\n                                        padding: 20,\n                                        fontStyle: 'bold',\n                                        textAlign: 'center'\n                                    }}\n                                    inputProps={{ style: { textAlign: 'center' } }}\n                                    disabled={this.state.disabled}/>\n\n                            </Grid>\n\n                            <Grid container item xs={6} justify='center' alignItems='center' direction='column'>\n                                <Avatar\n                                    src={this.state.encodedImage}\n                                    variant='circle'\n                                    style={{ height: '160px', width: '160px' }}\n                                    alt={this.state.userName}\n                                >\n                                    {\n                                        this.state.compressing ? <CircularProgress/> : <PersonIcon/>\n                                    }\n                                </Avatar>\n\n                                <Button\n                                    variant='outlined'\n                                    color='primary'\n                                    onClick={() => this.imageInput.click()}\n                                    style={{ marginTop: 40, paddingLeft: 40, paddingRight: 40, textTransform: 'capitalize' }}\n                                    disabled={this.state.disabled}\n                                >\n                                    <Typography variant='h6' align='center'>\n                                        Select Picture\n                                    </Typography>\n                                </Button>\n                                <input\n                                    style={{ display: 'none' }}\n                                    type='file'\n                                    onChange={this.imageSelectHandler}\n                                    ref={imageInput => this.imageInput = imageInput}\n                                />\n\n                            </Grid>\n\n                        </Grid>\n\n                        <Divider variant='middle' style={{ marginTop: 64, marginBottom: 64, height: 4 }} />\n\n                        <Typography align='center'>\n                            <Button\n                                variant='contained'\n                                size='large'\n                                align='center'\n                                color='primary'\n                                onClick={() => this.handleProfileSubmit()}\n                                style={{  paddingLeft: 80, paddingRight: 80 }}\n                                disabled={this.state.disabled}>\n\n                                Submit\n                            </Button>\n                        </Typography>\n                    </div>\n\n                    <Footer />\n\n                    <Backdrop\n                        open={this.state.loading}\n                    >\n                        <CircularProgress color='#fff' />\n                    </Backdrop>               \n                </div>\n            </ThemeProvider>\n        )\n    }\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\n\nimport Home from './screens/Home';\nimport Dashboard from './screens/Dashboard';\nimport Profile from './screens/Profile';\nimport WriteArticle from './screens/WriteArticle';\nimport Article from './screens/Article';\nimport EditProfile from './screens/EditProfile';\nimport User from './screens/User';\n\nexport default class App extends React.PureComponent {\n  render() {\n    \n\n    return (\n        <Router>\n            <Switch>\n              {/* <Route path=\"/dashboard\" component={Dashboard} />\n              <Route path=\"/editProfile\" component={EditProfile} />\n              <Route path=\"/profile\" component={Profile} />\n              <Route path=\"/writeArticle\" component={WriteArticle} />\n              <Route path=\"/articles/:articleId\" component={Article} />\n              <Route path=\"/users/:userId\" component={User} /> */}\n              <Route path=\"/\" component={Home} />\n            </Switch>\n        </Router>\n      \n    )\n  }\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider'\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Link from '@material-ui/core/Link';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\n\n\nimport Footer from '../components/Footer';\n\n\nimport serverUrl from '../config';\n\nimport Cookies from 'js-cookie';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\n\n\nexport default class User extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mainMenu: false,\n            loading: true,\n            userAvatar: null,\n            userName: null,\n            author: null,\n            articles: null\n        }\n    }\n\n    async getUser(userId) {\n        const url = `${serverUrl}/users?userId=${userId}`;\n\n        const rawResponse = await fetch(url, {\n            method: 'GET'\n        });\n\n        const content = await rawResponse.json();\n\n        this.setState({ userName: content.user.name, userAvatar: content.user.avatar });\n    }\n\n    async getAuthorData() {\n\n        const userId = this.props.match.params.userId;\n        const userUrl = `${serverUrl}/users?userId=${userId}`;\n\n        let rawData = await fetch(userUrl, {\n            method: 'GET'\n        });\n\n        const dataResponse = await rawData.json();\n        this.setState({ author: dataResponse.user });\n        \n    }\n\n    async getWrittenArticles() {\n        const userId = this.props.match.params.userId;\n        \n        // First get all the articles written by the visited user\n        const articlesUrl = `${serverUrl}/users/writtenArticles?userId=${userId}`;\n      \n        let rawArticles = await fetch(articlesUrl, {\n            method: 'GET'\n        });\n\n        const articlesResponse = await rawArticles.json();\n        this.setState({ articles: articlesResponse.articles });\n    }\n\n    async handleSignOutClick() {\n        this.setState({ mainMenu: false });\n\n        Cookies.remove('userAuthenticated');\n        Cookies.remove('userId');\n\n        this.props.history.replace('/');\n    }\n\n    componentDidMount() {\n        const userId = Cookies.get('userId');\n       \n        this.getUser(userId)\n            .then(() => this.getWrittenArticles())\n            .then(() => this.getAuthorData())\n            .then(() => {\n                this.setState({ loading: false });\n                console.log(this.state);\n            })\n            .catch((error) => {\n                console.error(error);\n                console.log(this.state);\n                this.setState({ loading: false });\n        })\n    }\n\n    render() {\n        const theme = createMuiTheme({\n            alette: {\n                primary: {\n                    main: '#673ab7',\n                },\n                secondary: {\n                    light: '#828282',\n                    main: '#000',\n                    contrastText: '#fff',\n                },\n            },\n            typography: {\n                fontFamily: 'Nunito'\n            }\n        });\n\n        if (this.state.loading)\n            return (\n                <Backdrop\n                    open={this.state.loading}\n                >\n                    <CircularProgress color='inherit' />\n                </Backdrop>\n            )\n        \n        return (\n            <ThemeProvider theme={theme}>\n                <div>\n                    <AppBar position=\"sticky\" style={{ backgroundColor: 'white' }}>\n                        <Toolbar style={{ paddingLeft: 80, paddingRight: 80 }}>\n\n                            <Typography variant=\"h5\" style={{ flex: 1, color: 'black' }}>\n                                <Link color='inherit' onClick={() => this.props.history.push('/')}>\n                                    Reader\n                                </Link>\n                            </Typography>\n\n                            <Button\n                                variant='outlined'\n                                style={{ paddingLeft: 20, paddingRight: 20, marginRight: 40, textTransform: 'capitalize' }}\n                                color='primary'>\n                                Upgrade\n                            </Button>\n\n                            <Avatar\n                                src={this.state.userAvatar}\n                                variant='circle'\n                                style={{ height: '40px', width: '40px', borderColor: 'primary', borderWidth: 2 }}\n                                onClick={(event) => this.setState({ mainMenu: event.currentTarget })} >\n                                <PersonIcon />\n                            </Avatar>\n                        </Toolbar>\n                    </AppBar>\n\n                    <div style={{marginLeft: 300, marginRight: 300, paddingTop: 80, paddingBottom: 80}}>\n\n                        <Grid container direction='row' spacing={0}>\n\n                            <Grid container item xs={6} justify='center'>\n                                <Avatar\n                                    src={this.state.author.avatar}\n                                    style={{ height: '160px', width: '160px' }}\n                                    variant='circle'\n                                    alt={this.state.author.name}\n                                    onClick={(event) => this.setState({ mainMenu: event.currentTarget })}\n                                >\n                                </Avatar>\n                            </Grid>\n\n                            <Grid container item xs={6} direction='column' style={{paddingTop: 40}}>\n                                <Typography variant='h4' color='inherit' style={{marginBottom: 8}}>\n                                    {this.state.author.name}\n                                </Typography>\n\n                                <Typography variant='body1' color='inherit' style={{ marginTop: 8 }}>\n                                    {this.state.author.about}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        \n                        <Typography variant='h6' color='inherit' align='center' style={{ marginTop: 20, marginBottom: 20 }}>\n                            Articles\n                            </Typography>\n                        <Grid container direction='row' style={{ marginTop: 20 }}>\n                            \n                            {\n                                this.state.articles.map((article) => (\n                                    <Grid item md={12} justify='center' style={{padding: 40, margin: 16}}>\n                                        <Card style={{ maxWidth: '100%' }}>\n                                            <CardActionArea>\n                                                <CardMedia\n                                                    component='img'\n                                                    src={article.image}\n                                                    alt={article.title}\n                                                    title={article.title}\n                                                    height='60%'\n                                                    width='100%'\n                                                />\n\n                                                <CardContent>\n                                                    <Typography variant='h5'>\n                                                        {article.title}\n                                                    </Typography>\n\n                                                    <Typography variant='body1'>\n                                                        {article.body}\n                                                    </Typography>\n\n                                                </CardContent>\n\n                                            </CardActionArea>\n                                        </Card>\n                                    </Grid>\n                                ))\n                            }\n                        </Grid>\n                    </div>\n\n                    <div style={{width: '100%', justifyContent: 'center'}}>\n                        \n                    </div>\n                    \n                </div>\n\n                <Menu\n                    id='main-menu'\n                    anchorEl={this.state.mainMenu}\n                    keepMounted\n                    open={Boolean(this.state.mainMenu)}\n                    onClose={() => this.setState({ mainMenu: false })}>\n\n                    <MenuItem>\n                        <Grid container direction='row' spacing={4}>\n                            <Grid item container justify='center' alignItems='center'>\n                                <Avatar\n                                    src={this.state.userAvatar}\n                                    variant='circle'\n                                    style={{ height: '64px', width: '64px' }} >\n                                    <PersonIcon />\n                                </Avatar>\n                            </Grid>\n\n                            <Grid container item justify='center' alignItems='center'>\n                                <Typography variant='body1' align='center' style={{ fontSize: 24 }}>\n                                    <Link color='inherit' onClick={() => this.props.history.push('/editProfile')}>\n                                        {this.state.userName}\n                                    </Link>\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </MenuItem>\n\n                    <MenuItem onClick={() => this.props.history.push('/dasboard')} style={{ padding: 16 }}>\n                        <Typography variant='body1' align='center'>\n                            Dashboard\n                        </Typography>\n                    </MenuItem>\n\n                    <MenuItem onClick={() => this.props.history.push('/writeArticle')} style={{ padding: 16 }}>\n                        <Typography variant='body1' align='center'>\n                            New Article\n                        </Typography>\n                    </MenuItem>\n\n                    <MenuItem onClick={() => this.setState({ mainMenu: false })} style={{ padding: 16 }}>\n                        <Typography variant='body1' align='center'>\n                            Help\n                        </Typography>\n                    </MenuItem>\n\n                    <MenuItem onClick={() => this.handleSignOutClick()} style={{ padding: 16 }}>\n                        <Typography variant='body1' align='center'>\n                            Sign Out\n                        </Typography>\n                    </MenuItem>\n                </Menu>\n            </ThemeProvider>\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const serverUrl = 'http://my-reader-api.herokuapp.com';\n\nmodule.exports = serverUrl;"],"sourceRoot":""}